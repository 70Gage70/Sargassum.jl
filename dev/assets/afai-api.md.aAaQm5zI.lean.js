import{_ as l,c as n,a4 as i,j as s,a as e,G as o,B as d,o as r}from"./chunks/framework.CsgBfYqC.js";const B=JSON.parse('{"title":"AFAI API","description":"","frontmatter":{},"headers":[],"relativePath":"afai-api.md","filePath":"afai-api.md","lastUpdated":null}'),p={name:"afai-api.md"},c={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},h={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""};function x(P,a,O,R,N,L){const t=d("Badge");return r(),n("div",null,[a[63]||(a[63]=i('<h1 id="AFAI-API" tabindex="-1">AFAI API <a class="header-anchor" href="#AFAI-API" aria-label="Permalink to &quot;AFAI API {#AFAI-API}&quot;">​</a></h1><p>These are the full docstrings for the AFAI subsection of Sargassum.jl.</p><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><ul><li><a href="#Sargassum.AFAI_DOWNLOADED_PATHS"><code>Sargassum.AFAI_DOWNLOADED_PATHS</code></a></li><li><a href="#Sargassum.SARGASSUM_DISTRIBUTION_PRECOMPUTED"><code>Sargassum.SARGASSUM_DISTRIBUTION_PRECOMPUTED</code></a></li><li><a href="#Sargassum.VERTICES_NORTH_ATLANTIC"><code>Sargassum.VERTICES_NORTH_ATLANTIC</code></a></li><li><a href="#Sargassum.VERTICES_PACIFIC_PANAMA"><code>Sargassum.VERTICES_PACIFIC_PANAMA</code></a></li><li><a href="#Sargassum._SARGASSUM_DISTRIBUTION_PRECOMPUTED_LINKS"><code>Sargassum._SARGASSUM_DISTRIBUTION_PRECOMPUTED_LINKS</code></a></li><li><a href="#Sargassum.AFAI"><code>Sargassum.AFAI</code></a></li><li><a href="#Sargassum.AFAIParameters"><code>Sargassum.AFAIParameters</code></a></li><li><a href="#Sargassum.SargassumDistribution"><code>Sargassum.SargassumDistribution</code></a></li><li><a href="#Sargassum.afai_to_distribution"><code>Sargassum.afai_to_distribution</code></a></li><li><a href="#Sargassum.clean_pacific!"><code>Sargassum.clean_pacific!</code></a></li><li><a href="#Sargassum.coast_and_clouds!"><code>Sargassum.coast_and_clouds!</code></a></li><li><a href="#Sargassum.distribution_to_nc"><code>Sargassum.distribution_to_nc</code></a></li><li><a href="#Sargassum.download_precomputed-Tuple{}"><code>Sargassum.download_precomputed</code></a></li><li><a href="#Sargassum.download_raw_afai-Tuple{Integer, Integer}"><code>Sargassum.download_raw_afai</code></a></li><li><a href="#Sargassum.pixel_classify!"><code>Sargassum.pixel_classify!</code></a></li><li><a href="#Sargassum.pixel_unmix!"><code>Sargassum.pixel_unmix!</code></a></li><li><a href="#Sargassum.remove_raw_afai-Tuple{Integer, Integer}"><code>Sargassum.remove_raw_afai</code></a></li><li><a href="#Sargassum.remove_raw_afai-Tuple{}"><code>Sargassum.remove_raw_afai</code></a></li><li><a href="#Sargassum.sargassum_distribution"><code>Sargassum.sargassum_distribution</code></a></li><li><a href="#Sargassum.update_afai_downloaded_paths!-Tuple{}"><code>Sargassum.update_afai_downloaded_paths!</code></a></li><li><a href="#Sargassum.update_sargassum_distribution_precomputed!-Tuple{}"><code>Sargassum.update_sargassum_distribution_precomputed!</code></a></li></ul><h2 id="Downloading-AFAI-Data" tabindex="-1">Downloading AFAI Data <a class="header-anchor" href="#Downloading-AFAI-Data" aria-label="Permalink to &quot;Downloading AFAI Data {#Downloading-AFAI-Data}&quot;">​</a></h2>',5)),s("details",c,[s("summary",null,[a[0]||(a[0]=s("a",{id:"Sargassum.AFAI_DOWNLOADED_PATHS",href:"#Sargassum.AFAI_DOWNLOADED_PATHS"},[s("span",{class:"jlbinding"},"Sargassum.AFAI_DOWNLOADED_PATHS")],-1)),a[1]||(a[1]=e()),o(t,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),a[2]||(a[2]=i(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AFAI_DOWNLOADED_PATHS</span></span></code></pre></div><p>A <code>Dict</code> mapping <code>(year, month)</code> pairs to the path of the downloaded data.</p><p><strong>Examples</strong></p><p>Obtain a list of all AFAI data that has ever been downloaded.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AFAI_DOWNLOADED_PATHS)</span></span></code></pre></div><p>Read the metadata of the .nc file.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NetCDF </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># install this if you haven&#39;t already</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ncinfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AFAI_DOWNLOADED_PATHS[(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2018</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)])</span></span></code></pre></div><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/raw-data.jl#L1-L20" target="_blank" rel="noreferrer">source</a></p>`,8))]),s("details",u,[s("summary",null,[a[3]||(a[3]=s("a",{id:"Sargassum.download_raw_afai-Tuple{Integer, Integer}",href:"#Sargassum.download_raw_afai-Tuple{Integer, Integer}"},[s("span",{class:"jlbinding"},"Sargassum.download_raw_afai")],-1)),a[4]||(a[4]=e()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[5]||(a[5]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">download_raw_afai</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(year</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, month_spec; force </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Download raw AFAI data from</p><p><code>https://cwcgom.aoml.noaa.gov/erddap/griddap/noaa_aoml_atlantic_oceanwatch_AFAI_7D.html</code></p><p>Four files are downloaded, one on the 7th, 14th, 21nd and 28th of each month, each of which are 7-day aggregates.</p><p>Refer to [<code>AFAI_DOWNLOADED_PATHS</code>] for the current status of downloaded data.</p><p><strong>Arguments</strong></p><ul><li><p><code>year</code> should be an integer equal to at least <code>2017</code> (the first full year available).</p></li><li><p><code>month_spec</code> can be one of the following</p><ul><li><p>an integer between <code>1</code> and <code>12</code>: download the data from the corresponding month</p></li><li><p>a vector of integers each between <code>1</code> and <code>12</code>: download the data from all of the corresponding months</p></li><li><p>omitted: download the data for every month in the given year</p></li></ul></li></ul><p><strong>Optional Arguments</strong></p><ul><li><code>force</code>: If <code>true</code>, download the data even if it has already been downloaded. Default <code>false</code>.</li></ul><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/raw-data.jl#L40-L62" target="_blank" rel="noreferrer">source</a></p>',10))]),s("details",h,[s("summary",null,[a[6]||(a[6]=s("a",{id:"Sargassum.remove_raw_afai-Tuple{Integer, Integer}",href:"#Sargassum.remove_raw_afai-Tuple{Integer, Integer}"},[s("span",{class:"jlbinding"},"Sargassum.remove_raw_afai")],-1)),a[7]||(a[7]=e()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[8]||(a[8]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">remove_raw_afai</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(year, month)</span></span></code></pre></div><p>Remove the raw data file corresponding to <code>(year, month)</code> and update <a href="/Sargassum.jl/dev/afai-api#Sargassum.AFAI_DOWNLOADED_PATHS"><code>AFAI_DOWNLOADED_PATHS</code></a>.</p><p>Does not throw an error if the data has not been downloaded.</p><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/raw-data.jl#L110-L116" target="_blank" rel="noreferrer">source</a></p>',4))]),s("details",g,[s("summary",null,[a[9]||(a[9]=s("a",{id:"Sargassum.remove_raw_afai-Tuple{}",href:"#Sargassum.remove_raw_afai-Tuple{}"},[s("span",{class:"jlbinding"},"Sargassum.remove_raw_afai")],-1)),a[10]||(a[10]=e()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[11]||(a[11]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">remove_raw_afai</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; force </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Remove all raw data file corresponding to <code>(year, month)</code> and update <a href="/Sargassum.jl/dev/afai-api#Sargassum.AFAI_DOWNLOADED_PATHS"><code>AFAI_DOWNLOADED_PATHS</code></a>.</p><p>Requires passing <code>force = true</code> to work.</p><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/raw-data.jl#L125-L131" target="_blank" rel="noreferrer">source</a></p>',4))]),s("details",m,[s("summary",null,[a[12]||(a[12]=s("a",{id:"Sargassum.update_afai_downloaded_paths!-Tuple{}",href:"#Sargassum.update_afai_downloaded_paths!-Tuple{}"},[s("span",{class:"jlbinding"},"Sargassum.update_afai_downloaded_paths!")],-1)),a[13]||(a[13]=e()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[14]||(a[14]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_afai_downloaded_paths!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Update <a href="/Sargassum.jl/dev/afai-api#Sargassum.AFAI_DOWNLOADED_PATHS"><code>AFAI_DOWNLOADED_PATHS</code></a> by reading <a href="/Sargassum.jl/dev/extra-api#Sargassum._AFAI_RAW_SCRATCH"><code>_AFAI_RAW_SCRATCH</code></a>.</p><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/raw-data.jl#L23-L27" target="_blank" rel="noreferrer">source</a></p>',3))]),a[64]||(a[64]=s("h2",{id:"afai",tabindex:"-1"},[e("AFAI "),s("a",{class:"header-anchor",href:"#afai","aria-label":'Permalink to "AFAI"'},"​")],-1)),s("details",b,[s("summary",null,[a[15]||(a[15]=s("a",{id:"Sargassum.AFAI",href:"#Sargassum.AFAI"},[s("span",{class:"jlbinding"},"Sargassum.AFAI")],-1)),a[16]||(a[16]=e()),o(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),a[17]||(a[17]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">mutable struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AFAI{U, T, R}</span></span></code></pre></div><p>A container for the AFAI data.</p><p><strong>Fields</strong></p><ul><li><p><code>lon</code>: A <code>Vector</code> of longitudes.</p></li><li><p><code>lat</code>: A <code>Vector</code> of latitudes.</p></li><li><p><code>time</code>: A <code>Vector</code> of <code>DateTime</code>s.</p></li><li><p><code>afai</code>: An <code>Array</code> of AFAI/Sargassum values of the form <code>afai[lon, lat, time]</code>.</p></li><li><p><code>coast</code>: A <code>BitMatrix</code> of size <code>size(afai)[1:2]</code> such that <code>coast[i, j] = 1</code> when the point <code>(lon[i], lat[j])</code> is on a coastline.</p></li><li><p><code>clouds</code>: A <code>BitArray</code> of size <code>size(afai)</code> such that <code>clouds[i, j, t] = 1</code> when there is a cloud at <code>(lon[i], lat[j])</code> and week <code>t</code>.</p></li><li><p><code>classification</code>: A <code>BitArray</code> of size <code>size(afai)</code> such that <code>clouds[i, j, t] = 1</code> when there Sargassum at <code>(lon[i], lat[j])</code> and week <code>t</code>.</p></li><li><p><code>params</code>: A <a href="/Sargassum.jl/dev/afai-api#Sargassum.AFAIParameters"><code>AFAIParameters</code></a>.</p></li></ul><p><strong>Constructor</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>AFAI(filename::String, params::AFAIParameters)</span></span></code></pre></div><p><code>filename</code> is a NetCDF of the form <code>name.nc</code></p><p>It is assumed that the file is obtained from the NOAA database:</p><p><a href="https://cwcgom.aoml.noaa.gov/erddap/griddap/noaa_aoml_atlantic_oceanwatch_AFAI_7D.html" target="_blank" rel="noreferrer">https://cwcgom.aoml.noaa.gov/erddap/griddap/noaa_aoml_atlantic_oceanwatch_AFAI_7D.html</a></p><p>The fields <code>coast</code>, <code>clouds</code> and <code>classification</code> are initialized with 0&#39;s by default. Use <a href="/Sargassum.jl/dev/afai-api#Sargassum.coast_and_clouds!"><code>coast_and_clouds!</code></a> and <a href="/Sargassum.jl/dev/afai-api#Sargassum.pixel_classify!"><code>pixel_classify!</code></a> to construct them fully.</p><p><strong>Plotting</strong></p><p>This object can be <code>[viz](@ref)</code>.</p><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/main.jl#L54-L86" target="_blank" rel="noreferrer">source</a></p>',13))]),s("details",f,[s("summary",null,[a[18]||(a[18]=s("a",{id:"Sargassum.AFAIParameters",href:"#Sargassum.AFAIParameters"},[s("span",{class:"jlbinding"},"Sargassum.AFAIParameters")],-1)),a[19]||(a[19]=e()),o(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),a[20]||(a[20]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AFAIParameters{U, T}</span></span></code></pre></div><p>A container for the parameters required to process the AFAI data.</p><p><strong>Fields</strong></p><ul><li><p><code>window_size_coast_mask</code>: An <code>Integer</code> giving the distance, in gridpoints, such that all gridpoints within that distance of the coastline are masked (removed.) Default: <code>20</code>.</p></li><li><p><code>window_size_median_filter</code>: An <code>Integer</code> giving the size, in gridpoints of the median filter applied to the data. Default: <code>51</code>.</p></li><li><p><code>threshold_median</code>: A <code>Real</code> such that all median-filtered <code>afai</code> values below it are considered to not contain Sargassum. Default: <code>1.79e-4</code>.</p></li><li><p><code>afai_U0</code>: A <code>Real</code> giving the global upper limit on <code>afai</code> values for Sargassum-containing pixels. Default: <code>4.41e-2</code>.</p></li><li><p><code>afai_L0</code>: A <code>Real</code> giving the global lower limit on <code>afai</code> values for Sargassum-containing pixels. Default: <code>-8.77e-4</code>.</p></li><li><p><code>lon_lat_bins_coverage</code>: A <code>Tuple{Integer, Integer}</code> of the form <code>(lon_bins, lat_bins)</code> where the final coverage distribution is binned with <code>lon_bins</code> horizontally and <code>lat_bins</code> gridpoints vertically. Default <code>(134, 64)</code>.</p></li><li><p><code>distribution_quant</code>: A <code>Real</code> giving the quantile below which bins are discarded in the final coverage distribution calculation. Default: <code>0.85</code>.</p></li></ul><p><strong>Constructors</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>AFAIParameters(; params...)</span></span></code></pre></div><p>Each field has a named kwarg.</p><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/main.jl#L1-L21" target="_blank" rel="noreferrer">source</a></p>',8))]),a[65]||(a[65]=s("h2",{id:"sargassumdistribution",tabindex:"-1"},[e("SargassumDistribution "),s("a",{class:"header-anchor",href:"#sargassumdistribution","aria-label":'Permalink to "SargassumDistribution"'},"​")],-1)),s("details",k,[s("summary",null,[a[21]||(a[21]=s("a",{id:"Sargassum.SargassumDistribution",href:"#Sargassum.SargassumDistribution"},[s("span",{class:"jlbinding"},"Sargassum.SargassumDistribution")],-1)),a[22]||(a[22]=e()),o(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),a[23]||(a[23]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SargassumDistribution{T, R}</span></span></code></pre></div><p>A container for a gridded distribution of Sargassum.</p><p><strong>Fields</strong></p><ul><li><p><code>lon</code>: A vector of longitudes.</p></li><li><p><code>lat</code>: A vector of latitudes.</p></li><li><p><code>time</code>: A <code>DateTime</code> giving the month and year when the distribution was computed.</p></li><li><p><code>coast</code>: A <code>BitMatrix</code> of size <code>size(sargassum)[1:2]</code> such that <code>coast[i, j] = 1</code> when the point <code>(lon[i], lat[j])</code> is on a coastline.</p></li><li><p><code>clouds</code>: A <code>BitArray</code> of size <code>size(sargassum)</code> such that <code>clouds[i, j, t] = 1</code> when there is a cloud at <code>(lon[i], lat[j])</code> and week <code>t</code>.</p></li><li><p><code>sargassum</code>: An <code>Array</code> with dimensions <code>(lon x lat x 4)</code> whose entries give the fractional coverage of Sargassum at each gridpoint and week of the month. Each value is expressed as a percentage of the total coverage in the entire grid in that month, that is, <code>sargassum</code> is a probability distribution on the grid of longitudes, latitudes and weeks. Or, more simply put, we have <code>sum(sargassum) == 1</code>.</p></li></ul><p><strong>Constructing from AFAI</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SargassumDistribution(afai::AFAI)</span></span></code></pre></div><p>In general, <code>afai</code> should be processed with <a href="/Sargassum.jl/dev/afai-api#Sargassum.clean_pacific!"><code>clean_pacific!</code></a>, <a href="/Sargassum.jl/dev/afai-api#Sargassum.coast_and_clouds!"><code>coast_and_clouds!</code></a>, <a href="/Sargassum.jl/dev/afai-api#Sargassum.pixel_classify!"><code>pixel_classify!</code></a> and <a href="/Sargassum.jl/dev/afai-api#Sargassum.pixel_unmix!"><code>pixel_unmix!</code></a>.</p><p>The data in <code>afai</code> are binned according to the bin size defined by <code>afai.params.lon_lat_bins_coverage</code>. For the clouds and coast, a bin is <code>true</code> if its mean over all pixels is greater than 0.5.</p><p><strong>Constructing from a NetCDF file</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SargassumDistribution(infile::String)</span></span></code></pre></div><p>A dictionary with entries of the form <code>(year, month) =&gt; distribution</code> is returned.</p><p><strong>Constructing manually</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SargassumDistribution(; kwargs...)</span></span></code></pre></div><p>Each field has a named kwarg. If <code>coast</code> and <code>clouds</code> are not provided, they are initialized using <code>falses</code>.</p><p><strong>Plotting</strong></p><p>This object can be <a href="/Sargassum.jl/dev/plotting#Sargassum.viz"><code>viz</code></a> and <a href="/Sargassum.jl/dev/plotting#Sargassum.viz!"><code>viz!</code></a>.</p><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/main.jl#L276-L314" target="_blank" rel="noreferrer">source</a></p>',17))]),s("details",A,[s("summary",null,[a[24]||(a[24]=s("a",{id:"Sargassum.sargassum_distribution",href:"#Sargassum.sargassum_distribution"},[s("span",{class:"jlbinding"},"Sargassum.sargassum_distribution")],-1)),a[25]||(a[25]=e()),o(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),a[26]||(a[26]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sargassum_distribution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(year, month_spec, outfile; params)</span></span></code></pre></div><p>Write the <a href="/Sargassum.jl/dev/afai-api#SargassumDistribution"><code>SargassumDistribution</code></a> at year <code>year</code> to the NetCDF file <code>outfile</code>.</p><ul><li><code>month_spec</code> can be one of the following <ul><li><p>an integer between <code>1</code> and <code>12</code>: download the data from the corresponding month</p></li><li><p>a vector of integers each between <code>1</code> and <code>12</code>: download the data from all of the corresponding months</p></li><li><p>omitted: download the data for every month in the given year</p></li></ul></li></ul><p>This is the highest level function available and attempts to download the data automatically if it hasn&#39;t already been downloaded and run the full calculation.</p><p><strong>Optional Arguments</strong></p><ul><li><code>params</code>: The <a href="/Sargassum.jl/dev/afai-api#Sargassum.AFAIParameters"><code>AFAIParameters</code></a> to use for each calculation.</li></ul><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/main.jl#L559-L574" target="_blank" rel="noreferrer">source</a></p>',7))]),s("details",S,[s("summary",null,[a[27]||(a[27]=s("a",{id:"Sargassum.distribution_to_nc",href:"#Sargassum.distribution_to_nc"},[s("span",{class:"jlbinding"},"Sargassum.distribution_to_nc")],-1)),a[28]||(a[28]=e()),o(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),a[29]||(a[29]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">distribution_to_nc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(distributions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{&lt;:SargassumDistribution}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, outfile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Write the vector of <code>SargassumDistribution</code>s in <code>distributions</code> to the NetCDF file named in <code>outfile</code>. That is, <code>outfile</code> should be of the form <code>name.nc</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>distribution_to_nc(distribution::SargassumDistribution, outfile::String)</span></span></code></pre></div><p>Write a single distribution as above.</p><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/main.jl#L422-L430" target="_blank" rel="noreferrer">source</a></p>',5))]),a[66]||(a[66]=s("h2",{id:"Precomputed-Sargassum-distributions",tabindex:"-1"},[e("Precomputed Sargassum distributions "),s("a",{class:"header-anchor",href:"#Precomputed-Sargassum-distributions","aria-label":'Permalink to "Precomputed Sargassum distributions {#Precomputed-Sargassum-distributions}"'},"​")],-1)),s("details",y,[s("summary",null,[a[30]||(a[30]=s("a",{id:"Sargassum.SARGASSUM_DISTRIBUTION_PRECOMPUTED",href:"#Sargassum.SARGASSUM_DISTRIBUTION_PRECOMPUTED"},[s("span",{class:"jlbinding"},"Sargassum.SARGASSUM_DISTRIBUTION_PRECOMPUTED")],-1)),a[31]||(a[31]=e()),o(t,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),a[32]||(a[32]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SARGASSUM_DISTRIBUTION_PRECOMPUTED</span></span></code></pre></div><p>A dictionary mapping years to <a href="/Sargassum.jl/dev/afai-api#SargassumDistribution"><code>SargassumDistribution</code></a> precomputed for that year using default <a href="/Sargassum.jl/dev/afai-api#Sargassum.AFAIParameters"><code>AFAIParameters</code></a>.</p><p>Use <a href="/Sargassum.jl/dev/afai-api#Sargassum.download_precomputed-Tuple{}"><code>download_precomputed()</code></a> to populate this dictionary.</p><p><strong>Examples</strong></p><p>Populate the dictionary</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> download_precomputed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Access the <a href="/Sargassum.jl/dev/afai-api#SargassumDistribution"><code>SargassumDistribution</code></a> from April, 2018.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SARGASSUM_DISTRIBUTION_PRECOMPUTED[(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2018</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span></code></pre></div><p>See all available <code>(year, month)</code> pairs.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(SARGASSUM_DISTRIBUTION_PRECOMPUTED)</span></span></code></pre></div><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/precomputed.jl#L1-L27" target="_blank" rel="noreferrer">source</a></p>',11))]),s("details",E,[s("summary",null,[a[33]||(a[33]=s("a",{id:"Sargassum._SARGASSUM_DISTRIBUTION_PRECOMPUTED_LINKS",href:"#Sargassum._SARGASSUM_DISTRIBUTION_PRECOMPUTED_LINKS"},[s("span",{class:"jlbinding"},"Sargassum._SARGASSUM_DISTRIBUTION_PRECOMPUTED_LINKS")],-1)),a[34]||(a[34]=e()),o(t,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),a[35]||(a[35]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _SARGASSUM_DISTRIBUTION_PRECOMPUTED_LINKS</span></span></code></pre></div><p>A dictionary mapping years to the link where the precomputed <a href="/Sargassum.jl/dev/afai-api#SargassumDistribution"><code>SargassumDistribution</code></a>s can be downloaded for that year.</p><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/precomputed.jl#L50-L54" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",v,[s("summary",null,[a[36]||(a[36]=s("a",{id:"Sargassum.download_precomputed-Tuple{}",href:"#Sargassum.download_precomputed-Tuple{}"},[s("span",{class:"jlbinding"},"Sargassum.download_precomputed")],-1)),a[37]||(a[37]=e()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[38]||(a[38]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">download_precomputed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Download <a href="/Sargassum.jl/dev/afai-api#SargassumDistribution"><code>SargassumDistribution</code></a> precomputed using default <a href="/Sargassum.jl/dev/afai-api#Sargassum.AFAIParameters"><code>AFAIParameters</code></a>.</p><p>This overwrites all precomputed distributions.</p><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/precomputed.jl#L66-L72" target="_blank" rel="noreferrer">source</a></p>',4))]),s("details",_,[s("summary",null,[a[39]||(a[39]=s("a",{id:"Sargassum.update_sargassum_distribution_precomputed!-Tuple{}",href:"#Sargassum.update_sargassum_distribution_precomputed!-Tuple{}"},[s("span",{class:"jlbinding"},"Sargassum.update_sargassum_distribution_precomputed!")],-1)),a[40]||(a[40]=e()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[41]||(a[41]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_sargassum_distribution_precomputed!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Update <a href="/Sargassum.jl/dev/afai-api#Sargassum.SARGASSUM_DISTRIBUTION_PRECOMPUTED"><code>SARGASSUM_DISTRIBUTION_PRECOMPUTED</code></a> by reading <a href="/Sargassum.jl/dev/extra-api#Sargassum._SARGASSUM_DISTRIBUTION_PRECOMPUTED_SCRATCH"><code>_SARGASSUM_DISTRIBUTION_PRECOMPUTED_SCRATCH</code></a>.</p><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/precomputed.jl#L31-L35" target="_blank" rel="noreferrer">source</a></p>',3))]),a[67]||(a[67]=s("h2",{id:"Earth-Polygons",tabindex:"-1"},[e("Earth Polygons "),s("a",{class:"header-anchor",href:"#Earth-Polygons","aria-label":'Permalink to "Earth Polygons {#Earth-Polygons}"'},"​")],-1)),s("details",j,[s("summary",null,[a[42]||(a[42]=s("a",{id:"Sargassum.VERTICES_NORTH_ATLANTIC",href:"#Sargassum.VERTICES_NORTH_ATLANTIC"},[s("span",{class:"jlbinding"},"Sargassum.VERTICES_NORTH_ATLANTIC")],-1)),a[43]||(a[43]=e()),o(t,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),a[44]||(a[44]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> VERTICES_NORTH_ATLANTIC</span></span></code></pre></div><p>An matrix of <code>(x, y)</code> coordinates (each row is a new coordinate) such that the polygon defined by these coordinates contains the North Atlantic with longitudes in <code>~[-100, -30]</code> and latitudes in <code>~[5, 35]</code>.</p><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/earth-polygons.jl#L25-L29" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",C,[s("summary",null,[a[45]||(a[45]=s("a",{id:"Sargassum.VERTICES_PACIFIC_PANAMA",href:"#Sargassum.VERTICES_PACIFIC_PANAMA"},[s("span",{class:"jlbinding"},"Sargassum.VERTICES_PACIFIC_PANAMA")],-1)),a[46]||(a[46]=e()),o(t,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),a[47]||(a[47]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> VERTICES_PACIFIC_PANAMA</span></span></code></pre></div><p>An matrix of <code>(x, y)</code> coordinates (each row is a new coordinate) such that the polygon defined by these coordinates contain the Pacific side of the Panama Canal. Used to remove Sargassum in this region.</p><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/earth-polygons.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))]),a[68]||(a[68]=s("h2",{id:"Internal-SargassumDistribution-Calculations",tabindex:"-1"},[e("Internal SargassumDistribution Calculations "),s("a",{class:"header-anchor",href:"#Internal-SargassumDistribution-Calculations","aria-label":'Permalink to "Internal SargassumDistribution Calculations {#Internal-SargassumDistribution-Calculations}"'},"​")],-1)),s("details",I,[s("summary",null,[a[48]||(a[48]=s("a",{id:"Sargassum.clean_pacific!",href:"#Sargassum.clean_pacific!"},[s("span",{class:"jlbinding"},"Sargassum.clean_pacific!")],-1)),a[49]||(a[49]=e()),o(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),a[50]||(a[50]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">clean_pacific!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(afai; vertices)</span></span></code></pre></div><p>Remove any Sargassum pixels that have crossed the Panama canal from <code>afai.afai</code>; by default this is done by removing Sargassum from pixels whose centers are inside <a href="/Sargassum.jl/dev/afai-api#Sargassum.VERTICES_PACIFIC_PANAMA"><code>VERTICES_PACIFIC_PANAMA</code></a>.</p><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/main.jl#L115-L120" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",F,[s("summary",null,[a[51]||(a[51]=s("a",{id:"Sargassum.coast_and_clouds!",href:"#Sargassum.coast_and_clouds!"},[s("span",{class:"jlbinding"},"Sargassum.coast_and_clouds!")],-1)),a[52]||(a[52]=e()),o(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),a[53]||(a[53]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coast_and_clouds!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(afai; apply_coast)</span></span></code></pre></div><p>Compute <code>afai.coast</code> and <code>afai.clouds</code> and update <code>afai</code> in place.</p><p><strong>Optional Arguments</strong></p><ul><li><code>apply_coast</code>: A <code>Bool</code> such that, if <code>true</code>, <code>afai.afai</code> is also updated to remove data on the coast. Default <code>true</code>.</li></ul><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/main.jl#L143-L151" target="_blank" rel="noreferrer">source</a></p>',5))]),s("details",T,[s("summary",null,[a[54]||(a[54]=s("a",{id:"Sargassum.pixel_classify!",href:"#Sargassum.pixel_classify!"},[s("span",{class:"jlbinding"},"Sargassum.pixel_classify!")],-1)),a[55]||(a[55]=e()),o(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),a[56]||(a[56]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pixel_classify!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(afai</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AFAI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; verbose</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute <code>afai.classification</code> and update <code>afai</code> in place.</p><p>This is accomplished in two steps. First, an <code>Array</code> of the same size and eltype of <code>afai.afai</code> is computed such that the value at each gridpoint is the median of all <code>afai.afai</code> values in a window of size <code>afai.params.window_size_median_filter</code> centered on that gridpoint. <code>NaN</code>s are ignored when calculating the median. If every value in the window is <code>NaN</code>, the value of <code>afai_median</code> is also <code>NaN</code>.</p><p>Then, the Sargassum-containing pixels are the entries of <code>afai.afai - afai_median</code> that are at least as large as <code>afai.params.threshold_median</code>.</p><p>Computing the median filter is parallelized but can take several minutes, hence the status is printed for each week. This can be turned off using the optional argument <code>verbose</code>.</p><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/main.jl#L196-L206" target="_blank" rel="noreferrer">source</a></p>',6))]),s("details",D,[s("summary",null,[a[57]||(a[57]=s("a",{id:"Sargassum.pixel_unmix!",href:"#Sargassum.pixel_unmix!"},[s("span",{class:"jlbinding"},"Sargassum.pixel_unmix!")],-1)),a[58]||(a[58]=e()),o(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),a[59]||(a[59]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pixel_unmix!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(afai)</span></span></code></pre></div><p>Update <code>afai.afai</code> in place such that the value at each gridpoint is the percentage coverage of Sargassum in that pixel. The coverage is only computed at the pixels given by <code>afai.classification</code>, and set to <code>0.0</code> elsewhere.</p><p>The coverage is computed as a linear interpolation between global maximum and minimum <code>afai</code> values provided by <code>afai.params.afai_U0</code> and <code>afai.params.afai_L0</code>.</p><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/main.jl#L243-L249" target="_blank" rel="noreferrer">source</a></p>',4))]),s("details",w,[s("summary",null,[a[60]||(a[60]=s("a",{id:"Sargassum.afai_to_distribution",href:"#Sargassum.afai_to_distribution"},[s("span",{class:"jlbinding"},"Sargassum.afai_to_distribution")],-1)),a[61]||(a[61]=e()),o(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),a[62]||(a[62]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">afai_to_distribution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, params</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AFAIParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute a <a href="/Sargassum.jl/dev/afai-api#SargassumDistribution"><code>SargassumDistribution</code></a> using the parameters <code>params</code> from the raw data file <code>file</code>.</p><p><a href="https://github.com/70Gage70/Sargassum.jl/blob/2b39baf573445329fcc89cde8a53191faae540ae/src/AFAITools/main.jl#L543-L547" target="_blank" rel="noreferrer">source</a></p>',3))])])}const M=l(p,[["render",x]]);export{B as __pageData,M as default};
