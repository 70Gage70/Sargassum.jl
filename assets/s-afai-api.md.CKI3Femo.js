import{_ as l,c as n,a4 as e,j as a,a as i,G as o,B as r,o as d}from"./chunks/framework.DQ6EixH3.js";const q=JSON.parse('{"title":"SargassumFromAFAI API","description":"","frontmatter":{},"headers":[],"relativePath":"s-afai-api.md","filePath":"s-afai-api.md","lastUpdated":null}'),p={name:"s-afai-api.md"},c={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},h={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""};function O(N,s,R,V,G,z){const t=r("Badge");return d(),n("div",null,[s[78]||(s[78]=e('<h1 id="SargassumFromAFAI-API" tabindex="-1">SargassumFromAFAI API <a class="header-anchor" href="#SargassumFromAFAI-API" aria-label="Permalink to &quot;SargassumFromAFAI API {#SargassumFromAFAI-API}&quot;">​</a></h1><p>These are the full docstrings for SargassumFromAFAI.jl.</p><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><ul><li><a href="#SargassumFromAFAI.DIST_1718"><code>SargassumFromAFAI.DIST_1718</code></a></li><li><a href="#SargassumFromAFAI.TREF"><code>SargassumFromAFAI.TREF</code></a></li><li><a href="#SargassumFromAFAI.VERTICES_NORTH_ATLANTIC"><code>SargassumFromAFAI.VERTICES_NORTH_ATLANTIC</code></a></li><li><a href="#SargassumFromAFAI.VERTICES_PACIFIC_PANAMA"><code>SargassumFromAFAI.VERTICES_PACIFIC_PANAMA</code></a></li><li><a href="#SargassumFromAFAI.AFAI"><code>SargassumFromAFAI.AFAI</code></a></li><li><a href="#SargassumFromAFAI.AFAIParameters"><code>SargassumFromAFAI.AFAIParameters</code></a></li><li><a href="#SargassumFromAFAI.SargassumDistribution"><code>SargassumFromAFAI.SargassumDistribution</code></a></li><li><a href="#SargassumFromAFAI.afai_to_distribution-Tuple{String, AFAIParameters}"><code>SargassumFromAFAI.afai_to_distribution</code></a></li><li><a href="#SargassumFromAFAI.clean_pacific!-Tuple{AFAI}"><code>SargassumFromAFAI.clean_pacific!</code></a></li><li><a href="#SargassumFromAFAI.clouds!-Tuple{Axis, Union{AFAI, SargassumDistribution}, Integer}"><code>SargassumFromAFAI.clouds!</code></a></li><li><a href="#SargassumFromAFAI.coast!-Tuple{Axis, Union{AFAI, SargassumDistribution}}"><code>SargassumFromAFAI.coast!</code></a></li><li><a href="#SargassumFromAFAI.coast_and_clouds!-Tuple{AFAI}"><code>SargassumFromAFAI.coast_and_clouds!</code></a></li><li><a href="#SargassumFromAFAI.data_path-Tuple{Integer, Integer}"><code>SargassumFromAFAI.data_path</code></a></li><li><a href="#SargassumFromAFAI.data_rm-Tuple{Integer, Integer}"><code>SargassumFromAFAI.data_rm</code></a></li><li><a href="#SargassumFromAFAI.distribution_to_nc-Tuple{Vector{&lt;:SargassumDistribution}, String}"><code>SargassumFromAFAI.distribution_to_nc</code></a></li><li><a href="#SargassumFromAFAI.download_data-Tuple{Integer, Integer}"><code>SargassumFromAFAI.download_data</code></a></li><li><a href="#SargassumFromAFAI.months2time-Tuple{Integer}"><code>SargassumFromAFAI.months2time</code></a></li><li><a href="#SargassumFromAFAI.pixel_classify!-Tuple{AFAI}"><code>SargassumFromAFAI.pixel_classify!</code></a></li><li><a href="#SargassumFromAFAI.pixel_unmix!-Tuple{AFAI}"><code>SargassumFromAFAI.pixel_unmix!</code></a></li><li><a href="#SargassumFromAFAI.plot-Tuple{SargassumDistribution, Integer}"><code>SargassumFromAFAI.plot</code></a></li><li><a href="#SargassumFromAFAI.plot-Tuple{SargassumDistribution}"><code>SargassumFromAFAI.plot</code></a></li><li><a href="#SargassumFromAFAI.plot-Tuple{AFAI}"><code>SargassumFromAFAI.plot</code></a></li><li><a href="#SargassumFromAFAI.sarg!-Tuple{Axis, SargassumDistribution, Integer}"><code>SargassumFromAFAI.sarg!</code></a></li><li><a href="#SargassumFromAFAI.sargassum-Tuple{Integer, String}"><code>SargassumFromAFAI.sargassum</code></a></li><li><a href="#SargassumFromAFAI.sargassum-Tuple{Integer, Vector{&lt;:Integer}, String}"><code>SargassumFromAFAI.sargassum</code></a></li><li><a href="#SargassumFromAFAI.time2months-Tuple{Integer, Integer}"><code>SargassumFromAFAI.time2months</code></a></li></ul><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2>',5)),a("details",c,[a("summary",null,[s[0]||(s[0]=a("a",{id:"SargassumFromAFAI.afai_to_distribution-Tuple{String, AFAIParameters}",href:"#SargassumFromAFAI.afai_to_distribution-Tuple{String, AFAIParameters}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.afai_to_distribution")],-1)),s[1]||(s[1]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[2]||(s[2]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">afai_to_distribution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, params</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AFAIParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute a <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.SargassumDistribution"><code>SargassumDistribution</code></a> using the parameters <code>params</code> from the raw data file <code>file</code>.</p><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/main.jl#L553-L557" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",g,[a("summary",null,[s[3]||(s[3]=a("a",{id:"SargassumFromAFAI.clean_pacific!-Tuple{AFAI}",href:"#SargassumFromAFAI.clean_pacific!-Tuple{AFAI}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.clean_pacific!")],-1)),s[4]||(s[4]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[5]||(s[5]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">clean_pacific!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(afai; vertices)</span></span></code></pre></div><p>Remove any Sargassum pixels that have crossed the Panama canal from <code>afai.afai</code>; by default this is done by removing Sargassum from pixels whose centers are inside <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.VERTICES_PACIFIC_PANAMA"><code>VERTICES_PACIFIC_PANAMA</code></a>.</p><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/main.jl#L115-L120" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",u,[a("summary",null,[s[6]||(s[6]=a("a",{id:"SargassumFromAFAI.clouds!-Tuple{Axis, Union{AFAI, SargassumDistribution}, Integer}",href:"#SargassumFromAFAI.clouds!-Tuple{Axis, Union{AFAI, SargassumDistribution}, Integer}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.clouds!")],-1)),s[7]||(s[7]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[8]||(s[8]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">clouds!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, dist, week; args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Add a heatmap of <code>dist.clouds[:, :, week]</code> to <code>ax::Makie.Axis</code>, where dist can be <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.AFAI"><code>AFAI</code></a> or <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.SargassumDistribution"><code>SargassumDistribution</code></a>.</p><p><strong>Optional Arguments</strong></p><ul><li><code>args...</code>: All keyword arguments are passed directly to <code>Makie.heatmap!</code>.</li></ul><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/plotting.jl#L35-L43" target="_blank" rel="noreferrer">source</a></p>',5))]),a("details",h,[a("summary",null,[s[9]||(s[9]=a("a",{id:"SargassumFromAFAI.coast!-Tuple{Axis, Union{AFAI, SargassumDistribution}}",href:"#SargassumFromAFAI.coast!-Tuple{Axis, Union{AFAI, SargassumDistribution}}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.coast!")],-1)),s[10]||(s[10]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[11]||(s[11]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coast!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, dist; args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Add a heatmap of <code>dist.coast</code> to <code>ax::Makie.Axis</code>, where dist can be <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.AFAI"><code>AFAI</code></a> or <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.SargassumDistribution"><code>SargassumDistribution</code></a>.</p><p><strong>Optional Arguments</strong></p><ul><li><code>args...</code>: All keyword arguments are passed directly to <code>Makie.heatmap!</code>.</li></ul><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/plotting.jl#L4-L12" target="_blank" rel="noreferrer">source</a></p>',5))]),a("details",m,[a("summary",null,[s[12]||(s[12]=a("a",{id:"SargassumFromAFAI.coast_and_clouds!-Tuple{AFAI}",href:"#SargassumFromAFAI.coast_and_clouds!-Tuple{AFAI}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.coast_and_clouds!")],-1)),s[13]||(s[13]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[14]||(s[14]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coast_and_clouds!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(afai; apply_coast)</span></span></code></pre></div><p>Compute <code>afai.coast</code> and <code>afai.clouds</code> and update <code>afai</code> in place.</p><p><strong>Optional Arguments</strong></p><ul><li><code>apply_coast</code>: A <code>Bool</code> such that, if <code>true</code>, <code>afai.afai</code> is also updated to remove data on the coast. Default <code>true</code>.</li></ul><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/main.jl#L143-L151" target="_blank" rel="noreferrer">source</a></p>',5))]),a("details",A,[a("summary",null,[s[15]||(s[15]=a("a",{id:"SargassumFromAFAI.data_path-Tuple{Integer, Integer}",href:"#SargassumFromAFAI.data_path-Tuple{Integer, Integer}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.data_path")],-1)),s[16]||(s[16]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[17]||(s[17]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">data_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(year</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the path to the raw data set for the given month and year, if it exists.</p><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/data/remote-files.jl#L56-L60" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",F,[a("summary",null,[s[18]||(s[18]=a("a",{id:"SargassumFromAFAI.data_rm-Tuple{Integer, Integer}",href:"#SargassumFromAFAI.data_rm-Tuple{Integer, Integer}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.data_rm")],-1)),s[19]||(s[19]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[20]||(s[20]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">data_rm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(year</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Remove the raw data set for the given month and year, if it exists.</p><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/data/remote-files.jl#L92-L96" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",k,[a("summary",null,[s[21]||(s[21]=a("a",{id:"SargassumFromAFAI.distribution_to_nc-Tuple{Vector{<:SargassumDistribution}, String}",href:"#SargassumFromAFAI.distribution_to_nc-Tuple{Vector{<:SargassumDistribution}, String}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.distribution_to_nc")],-1)),s[22]||(s[22]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[23]||(s[23]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">distribution_to_nc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(distributions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{&lt;:SargassumDistribution}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, outfile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Write the vector of <code>SargassumDistribution</code>s in <code>distributions</code> to the NetCDF file named in <code>outfile</code>. That is, <code>outfile</code> should be of the form <code>name.nc</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>distribution_to_nc(distribution::SargassumDistribution, outfile::String)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Write a signle distribution as above.</span></span></code></pre></div><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/main.jl#L432-L440" target="_blank" rel="noreferrer">source</a></p>`,4))]),a("details",b,[a("summary",null,[s[24]||(s[24]=a("a",{id:"SargassumFromAFAI.download_data-Tuple{Integer, Integer}",href:"#SargassumFromAFAI.download_data-Tuple{Integer, Integer}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.download_data")],-1)),s[25]||(s[25]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[26]||(s[26]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">download_data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(year</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Download the AFAI data for the given year and month from</p><p><code>https://cwcgom.aoml.noaa.gov/erddap/griddap/noaa_aoml_atlantic_oceanwatch_AFAI_7D.html</code></p><p>Can be applied as <code>download_data(year::Integer, month::Vector{&lt;:Integer})</code> to download multiple months in a given year at once.</p><p>Four files are downloaded, one on the 7th, 14th, 21nd and 28th of each month, each of which are 7-day aggregates.</p><p>The files are named &quot;afai-year-month.nc&quot; and are stored in the <code>data</code> folder of this package.</p><p>Use the function <code>data_path(year, month)</code> to obtain the path to the file. And <code>data_rm(year, month)</code> to remove it.</p><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/data/remote-files.jl#L1-L15" target="_blank" rel="noreferrer">source</a></p>',8))]),a("details",f,[a("summary",null,[s[27]||(s[27]=a("a",{id:"SargassumFromAFAI.months2time-Tuple{Integer}",href:"#SargassumFromAFAI.months2time-Tuple{Integer}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.months2time")],-1)),s[28]||(s[28]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[29]||(s[29]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">months2time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(months</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Calculate the date in <code>(year, month)</code> format after <code>months</code> months have elapsed since <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.TREF"><code>TREF</code></a>.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">months2time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">219</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2018</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/time.jl#L48-L59" target="_blank" rel="noreferrer">source</a></p>`,5))]),a("details",I,[a("summary",null,[s[30]||(s[30]=a("a",{id:"SargassumFromAFAI.pixel_classify!-Tuple{AFAI}",href:"#SargassumFromAFAI.pixel_classify!-Tuple{AFAI}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.pixel_classify!")],-1)),s[31]||(s[31]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[32]||(s[32]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pixel_classify!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(afai</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AFAI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; verbose</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute <code>afai.classification</code> and update <code>afai</code> in place.</p><p>This is accomplished in two steps. First, an <code>Array</code> of the same size and eltype of <code>afai.afai</code> is computed such that the value at each gridpoint is the median of all <code>afai.afai</code> values in a window of size <code>afai.params.window_size_median_filter</code> centered on that gridpoint. <code>NaN</code>s are ignored when calculating the median. If every value in the window is <code>NaN</code>, the value of <code>afai_median</code> is also <code>NaN</code>.</p><p>Then, the Sargassum-containing pixels are the entries of <code>afai.afai - afai_median</code> that are at least as large as <code>afai.params.threshold_median</code>.</p><p>Computing the median filter is parallelized but can take several minutes, hence the status is printed for each week. This can be turned off using the optional argument <code>verbose</code>.</p><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/main.jl#L196-L206" target="_blank" rel="noreferrer">source</a></p>',6))]),a("details",y,[a("summary",null,[s[33]||(s[33]=a("a",{id:"SargassumFromAFAI.pixel_unmix!-Tuple{AFAI}",href:"#SargassumFromAFAI.pixel_unmix!-Tuple{AFAI}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.pixel_unmix!")],-1)),s[34]||(s[34]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[35]||(s[35]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pixel_unmix!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(afai)</span></span></code></pre></div><p>Update <code>afai.afai</code> in place such that the value at each gridpoint is the percentage coverage of Sargassum in that pixel. The coverage is only computed at the pixels given by <code>afai.classification</code>, and set to <code>0.0</code> elsewhere.</p><p>The coverage is computed as a linear interpolation between global maximum and minimum <code>afai</code> values provided by <code>afai.params.afai_U0</code> and <code>afai.params.afai_L0</code>.</p><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/main.jl#L243-L249" target="_blank" rel="noreferrer">source</a></p>',4))]),a("details",v,[a("summary",null,[s[36]||(s[36]=a("a",{id:"SargassumFromAFAI.plot-Tuple{AFAI}",href:"#SargassumFromAFAI.plot-Tuple{AFAI}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.plot")],-1)),s[37]||(s[37]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[38]||(s[38]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(afai; show_coast, show_clouds)</span></span></code></pre></div><p>Plot <code>afai.afai</code> for each of the four weeks on one graph.</p><p><strong>Optional Arguments</strong></p><ul><li><p><code>show_coast</code>: Highlight the coastlines in each graph via <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.coast!-Tuple{Axis, Union{AFAI, SargassumDistribution}}"><code>coast!</code></a>.</p></li><li><p><code>show_clouds</code>: Highlight clouds/missing data in each graph via <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.clouds!-Tuple{Axis, Union{AFAI, SargassumDistribution}, Integer}"><code>clouds!</code></a>.</p></li><li><p><code>limits</code>: A <code>NTuple{4, Int64}</code> giving the limits of the graph in the form <code>(lon_min, lon_max, lat_min, lat_max)</code>. Default <code>(-100, -38, 0, 35)</code>.</p></li></ul><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/plotting.jl#L69-L79" target="_blank" rel="noreferrer">source</a></p>',5))]),a("details",S,[a("summary",null,[s[39]||(s[39]=a("a",{id:"SargassumFromAFAI.plot-Tuple{SargassumDistribution, Integer}",href:"#SargassumFromAFAI.plot-Tuple{SargassumDistribution, Integer}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.plot")],-1)),s[40]||(s[40]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[41]||(s[41]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sargassum_distribution, week; show_coast, show_clouds, limits)</span></span></code></pre></div><p>Plot <code>sargassum_distribution</code> for the week <code>week</code>.</p><p><strong>Optional Arguments</strong></p><ul><li><p><code>show_coast</code>: Highlight the coastlines in each graph via <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.coast!-Tuple{Axis, Union{AFAI, SargassumDistribution}}"><code>coast!</code></a>. Default <code>false</code>.</p></li><li><p><code>show_clouds</code>: Highlight clouds/missing data in each graph via <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.clouds!-Tuple{Axis, Union{AFAI, SargassumDistribution}, Integer}"><code>clouds!</code></a>. Default <code>false</code>.</p></li><li><p><code>limits</code>: A <code>NTuple{4, Int64}</code> giving the limits of the graph in the form <code>(lon_min, lon_max, lat_min, lat_max)</code>. Default <code>(-90, -38, -5, 22)</code>.</p></li></ul><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/plotting.jl#L206-L216" target="_blank" rel="noreferrer">source</a></p>',5))]),a("details",j,[a("summary",null,[s[42]||(s[42]=a("a",{id:"SargassumFromAFAI.plot-Tuple{SargassumDistribution}",href:"#SargassumFromAFAI.plot-Tuple{SargassumDistribution}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.plot")],-1)),s[43]||(s[43]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[44]||(s[44]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sargassum_distribution; show_coast, show_clouds, limits)</span></span></code></pre></div><p>Plot <code>sargassum_distribution</code> for each of the four weeks in one graph.</p><p><strong>Optional Arguments</strong></p><ul><li><p><code>show_coast</code>: Highlight the coastlines in each graph via <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.coast!-Tuple{Axis, Union{AFAI, SargassumDistribution}}"><code>coast!</code></a>. Default <code>false</code>.</p></li><li><p><code>show_clouds</code>: Highlight clouds/missing data in each graph via <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.clouds!-Tuple{Axis, Union{AFAI, SargassumDistribution}, Integer}"><code>clouds!</code></a>. Default <code>false</code>.</p></li><li><p><code>limits</code>: A <code>NTuple{4, Int64}</code> giving the limits of the graph in the form <code>(lon_min, lon_max, lat_min, lat_max)</code>. Default <code>(-90, -38, -5, 22)</code>.</p></li></ul><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/plotting.jl#L127-L137" target="_blank" rel="noreferrer">source</a></p>',5))]),a("details",E,[a("summary",null,[s[45]||(s[45]=a("a",{id:"SargassumFromAFAI.sarg!-Tuple{Axis, SargassumDistribution, Integer}",href:"#SargassumFromAFAI.sarg!-Tuple{Axis, SargassumDistribution, Integer}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.sarg!")],-1)),s[46]||(s[46]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[47]||(s[47]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sarg!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(axis, sargassum_distribution, week; log_scale, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Add a plot of <code>sargassum_distribution</code> for the week <code>week</code> to <code>Axis::Makie.Axis</code>. Returns a <code>Makie.heatmap!</code>.</p><p><strong>Optional Arguments</strong></p><ul><li><p><code>log_scale</code>: Plot on a <code>log10</code> scale. Default <code>false</code>.</p></li><li><p><code>args...</code>: All keyword arguments are passed directly to <code>Makie.heatmap!</code>.</p></li></ul><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/plotting.jl#L256-L265" target="_blank" rel="noreferrer">source</a></p>',5))]),a("details",C,[a("summary",null,[s[48]||(s[48]=a("a",{id:"SargassumFromAFAI.sargassum-Tuple{Integer, String}",href:"#SargassumFromAFAI.sargassum-Tuple{Integer, String}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.sargassum")],-1)),s[49]||(s[49]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[50]||(s[50]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sargassum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(year, outfile; params)</span></span></code></pre></div><p>Compute <code>sargassum(year, collect(1:12), outfile; params = params)</code>, i.e. the <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.SargassumDistribution"><code>SargassumDistribution</code></a> for each month in <code>year</code>.</p><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/main.jl#L617-L621" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",T,[a("summary",null,[s[51]||(s[51]=a("a",{id:"SargassumFromAFAI.sargassum-Tuple{Integer, Vector{<:Integer}, String}",href:"#SargassumFromAFAI.sargassum-Tuple{Integer, Vector{<:Integer}, String}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.sargassum")],-1)),s[52]||(s[52]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[53]||(s[53]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sargassum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(year, months, outfile; params)</span></span></code></pre></div><p>Write the <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.SargassumDistribution"><code>SargassumDistribution</code></a> at year <code>year</code> and for each month in <code>months</code> to the NetCDF file <code>outfile</code>.</p><p><code>months</code> can be an integer or a vector of integers.</p><p>This is the highest level function available and attempts to download the data automatically if it hasn&#39;t already been downloaded and run the full calculation.</p><p><strong>Optional Arguments</strong></p><ul><li><code>params</code>: The <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.AFAIParameters"><code>AFAIParameters</code></a> to use for each calculation.</li></ul><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/main.jl#L569-L581" target="_blank" rel="noreferrer">source</a></p>',7))]),a("details",x,[a("summary",null,[s[54]||(s[54]=a("a",{id:"SargassumFromAFAI.time2months-Tuple{Integer, Integer}",href:"#SargassumFromAFAI.time2months-Tuple{Integer, Integer}"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.time2months")],-1)),s[55]||(s[55]=i()),o(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[56]||(s[56]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">time2months</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(yr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mnth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Calculate the number of months since <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.TREF"><code>TREF</code></a> of the date with year <code>yr</code> and month <code>mnth</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>time2months(yearmonth::Tuple{Integer, Integer})</span></span></code></pre></div><p>Compute <code>time2months(yearmonth[1], yearmonth[2])</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>time2months(time::DateTime)</span></span></code></pre></div><p>Compute <code>time2months(year(time), month(time))</code>.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">time2months</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2018</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">219</span></span></code></pre></div><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/time.jl#L10-L29" target="_blank" rel="noreferrer">source</a></p>`,9))]),s[79]||(s[79]=a("h2",{id:"types",tabindex:"-1"},[i("Types "),a("a",{class:"header-anchor",href:"#types","aria-label":'Permalink to "Types"'},"​")],-1)),a("details",_,[a("summary",null,[s[57]||(s[57]=a("a",{id:"SargassumFromAFAI.AFAI",href:"#SargassumFromAFAI.AFAI"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.AFAI")],-1)),s[58]||(s[58]=i()),o(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[59]||(s[59]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">mutable struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AFAI{U, T, R}</span></span></code></pre></div><p>A container for the AFAI data.</p><p><strong>Fields</strong></p><ul><li><p><code>lon</code>: A <code>Vector</code> of longitudes.</p></li><li><p><code>lat</code>: A <code>Vector</code> of latitudes.</p></li><li><p><code>time</code>: A <code>Vector</code> of <code>DateTime</code>s.</p></li><li><p><code>afai</code>: An <code>Array</code> of AFAI/Sargassum values of the form <code>afai[lon, lat, time]</code>.</p></li><li><p><code>coast</code>: A <code>BitMatrix</code> of size <code>size(afai)[1:2]</code> such that <code>coast[i, j] = 1</code> when the point <code>(lon[i], lat[j])</code> is on a coastline.</p></li><li><p><code>clouds</code>: A <code>BitArray</code> of size <code>size(afai)</code> such that <code>clouds[i, j, t] = 1</code> when there is a cloud at <code>(lon[i], lat[j])</code> and week <code>t</code>.</p></li><li><p><code>classification</code>: A <code>BitArray</code> of size <code>size(afai)</code> such that <code>clouds[i, j, t] = 1</code> when there Sargassum at <code>(lon[i], lat[j])</code> and week <code>t</code>.</p></li><li><p><code>params</code>: A <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.AFAIParameters"><code>AFAIParameters</code></a>.</p></li></ul><p><strong>Constructor</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>AFAI(filename::String, params::AFAIParameters)</span></span></code></pre></div><p><code>filename</code> is a NetCDF of the form <code>name.nc</code></p><p>It is assumed that the file is obtained from the NOAA database:</p><p><a href="https://cwcgom.aoml.noaa.gov/erddap/griddap/noaa_aoml_atlantic_oceanwatch_AFAI_7D.html" target="_blank" rel="noreferrer">https://cwcgom.aoml.noaa.gov/erddap/griddap/noaa_aoml_atlantic_oceanwatch_AFAI_7D.html</a></p><p>The fields <code>coast</code>, <code>clouds</code> and <code>classification</code> are initialized with 0&#39;s by default. Use <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.coast_and_clouds!-Tuple{AFAI}"><code>coast_and_clouds!</code></a> and <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.pixel_classify!-Tuple{AFAI}"><code>pixel_classify!</code></a> to construct them fully.</p><p><strong>Plotting</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>plot(afai::AFAI; show_coast::Bool = false, show_clouds::Bool = false)</span></span></code></pre></div><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/main.jl#L54-L86" target="_blank" rel="noreferrer">source</a></p>',13))]),a("details",w,[a("summary",null,[s[60]||(s[60]=a("a",{id:"SargassumFromAFAI.AFAIParameters",href:"#SargassumFromAFAI.AFAIParameters"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.AFAIParameters")],-1)),s[61]||(s[61]=i()),o(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[62]||(s[62]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AFAIParameters{U, T}</span></span></code></pre></div><p>A container for the parameters required to process the AFAI data.</p><p><strong>Fields</strong></p><ul><li><p><code>window_size_coast_mask</code>: An <code>Integer</code> giving the distance, in gridpoints, such that all gridpoints within that distance of the coastline are masked (removed.) Default: <code>20</code>.</p></li><li><p><code>window_size_median_filter</code>: An <code>Integer</code> giving the size, in gridpoints of the median filter applied to the data. Default: <code>51</code>.</p></li><li><p><code>threshold_median</code>: A <code>Real</code> such that all median-filtered <code>afai</code> values below it are considered to not contain Sargassum. Default: <code>1.79e-4</code>.</p></li><li><p><code>afai_U0</code>: A <code>Real</code> giving the global upper limit on <code>afai</code> values for Sargassum-containing pixels. Default: <code>4.41e-2</code>.</p></li><li><p><code>afai_L0</code>: A <code>Real</code> giving the global lower limit on <code>afai</code> values for Sargassum-containing pixels. Default: <code>-8.77e-4</code>.</p></li><li><p><code>lon_lat_bins_coverage</code>: A <code>Tuple{Integer, Integer}</code> of the form <code>(lon_bins, lat_bins)</code> where the final coverage distribution is binned with <code>lon_bins</code> horizontally and <code>lat_bins</code> gridpoints vertically. Default <code>(134, 64)</code>.</p></li><li><p><code>distribution_quant</code>: A <code>Real</code> giving the quantile below which bins are discarded in the final coverage distribution calculation. Default: <code>0.85</code>.</p></li></ul><p><strong>Constructors</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>AFAIParameters(; params...)</span></span></code></pre></div><p>Each field has a named kwarg.</p><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/main.jl#L1-L21" target="_blank" rel="noreferrer">source</a></p>',8))]),a("details",D,[a("summary",null,[s[63]||(s[63]=a("a",{id:"SargassumFromAFAI.SargassumDistribution",href:"#SargassumFromAFAI.SargassumDistribution"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.SargassumDistribution")],-1)),s[64]||(s[64]=i()),o(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[65]||(s[65]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SargassumDistribution{T, R}</span></span></code></pre></div><p>A container for a gridded distribution of Sargassum.</p><p><strong>Fields</strong></p><ul><li><p><code>lon</code>: A vector of longitudes.</p></li><li><p><code>lat</code>: A vector of latitudes.</p></li><li><p><code>time</code>: A <code>DateTime</code> giving the month and year when the distribution was computed.</p></li><li><p><code>coast</code>: A <code>BitMatrix</code> of size <code>size(sargassum)[1:2]</code> such that <code>coast[i, j] = 1</code> when the point <code>(lon[i], lat[j])</code> is on a coastline.</p></li><li><p><code>clouds</code>: A <code>BitArray</code> of size <code>size(sargassum)</code> such that <code>clouds[i, j, t] = 1</code> when there is a cloud at <code>(lon[i], lat[j])</code> and week <code>t</code>.</p></li><li><p><code>sargassum</code>: An <code>Array</code> with dimensions <code>(lon x lat x 4)</code> whose entries give the fractional coverage of Sargassum at each gridpoint and week of the month. Each value is expressed as a percentage of the total coverage in the entire grid in that month, that is, <code>sargassum</code> is a probability distribution on the grid of longitudes, latitudes and weeks. Or, more simply put, we have <code>sum(sargassum) == 1</code>.</p></li></ul><p><strong>Constructing from AFAI</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SargassumDistribution(afai::AFAI)</span></span></code></pre></div><p>In general, <code>afai</code> should be processed with <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.clean_pacific!-Tuple{AFAI}"><code>clean_pacific!</code></a>, <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.coast_and_clouds!-Tuple{AFAI}"><code>coast_and_clouds!</code></a>, <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.pixel_classify!-Tuple{AFAI}"><code>pixel_classify!</code></a> and <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.pixel_unmix!-Tuple{AFAI}"><code>pixel_unmix!</code></a>.</p><p>The data in <code>afai</code> are binned according to the bin size defined by <code>afai.params.lon_lat_bins_coverage</code>. For the clouds and coast, a bin is <code>true</code> if its mean over all pixels is greater than 0.5.</p><p><strong>Constructing from a NetCDF file</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SargassumDistribution(infile::String)</span></span></code></pre></div><p>A dictionary with entries of the form <code>(year, month) =&gt; distribution</code> is returned.</p><p><strong>Constructing manually</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SargassumDistribution(; kwargs...)</span></span></code></pre></div><p>Each field has a named kwarg. If <code>coast</code> and <code>clouds</code> are not provided, they are initialized using <code>falses</code>.</p><p><strong>Plotting</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>plot(sargassum_distribution; show_coast, show_clouds, limits)</span></span></code></pre></div><p>View each weekly distribution for a given month.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>plot(sargassum_distribution, week; show_coast, show_clouds, limits)</span></span></code></pre></div><p>View a specific week, where <code>week ∈ [1, 2, 3, 4]</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sarg!(axis::Makie.Axis, sargassum_distribution, week; log_scale, args...)</span></span></code></pre></div><p>Add a plot of the distribution on a given week to a predefined axis.</p><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/main.jl#L276-L324" target="_blank" rel="noreferrer">source</a></p>',22))]),s[80]||(s[80]=a("h2",{id:"constants",tabindex:"-1"},[i("Constants "),a("a",{class:"header-anchor",href:"#constants","aria-label":'Permalink to "Constants"'},"​")],-1)),a("details",L,[a("summary",null,[s[66]||(s[66]=a("a",{id:"SargassumFromAFAI.DIST_1718",href:"#SargassumFromAFAI.DIST_1718"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.DIST_1718")],-1)),s[67]||(s[67]=i()),o(t,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),s[68]||(s[68]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DIST_1718</span></span></code></pre></div><p>A dictionary mapping <code>(year, month)</code> pairs to <a href="/Sargassum.jl.git/dev/s-afai-api#SargassumFromAFAI.SargassumDistribution"><code>SargassumDistribution</code></a>s for the years 2017 and 2018 computed using <code>SargassumFromAFAI.jl</code> at months where sufficient data are available.</p><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/data/precomputed.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",B,[a("summary",null,[s[69]||(s[69]=a("a",{id:"SargassumFromAFAI.TREF",href:"#SargassumFromAFAI.TREF"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.TREF")],-1)),s[70]||(s[70]=i()),o(t,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),s[71]||(s[71]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TREF</span></span></code></pre></div><p>The reference time for the <code>time</code> variable in distribution NetCDFs.</p><p>Equal to <code>January 1, 2000</code>.</p><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/src/time.jl#L1-L7" target="_blank" rel="noreferrer">source</a></p>',4))]),a("details",M,[a("summary",null,[s[72]||(s[72]=a("a",{id:"SargassumFromAFAI.VERTICES_NORTH_ATLANTIC",href:"#SargassumFromAFAI.VERTICES_NORTH_ATLANTIC"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.VERTICES_NORTH_ATLANTIC")],-1)),s[73]||(s[73]=i()),o(t,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),s[74]||(s[74]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> VERTICES_NORTH_ATLANTIC</span></span></code></pre></div><p>An matrix of <code>(x, y)</code> coordinates (each row is a new coordinate) such that the polygon defined by these coordinates contains the North Atlantic with longitudes in <code>~[-100, -30]</code> and latitudes in <code>~[5, 35]</code>.</p><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/data/earth-polygons.jl#L25-L29" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",P,[a("summary",null,[s[75]||(s[75]=a("a",{id:"SargassumFromAFAI.VERTICES_PACIFIC_PANAMA",href:"#SargassumFromAFAI.VERTICES_PACIFIC_PANAMA"},[a("span",{class:"jlbinding"},"SargassumFromAFAI.VERTICES_PACIFIC_PANAMA")],-1)),s[76]||(s[76]=i()),o(t,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),s[77]||(s[77]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> VERTICES_PACIFIC_PANAMA</span></span></code></pre></div><p>An matrix of <code>(x, y)</code> coordinates (each row is a new coordinate) such that the polygon defined by these coordinates contain the Pacific side of the Panama Canal. Used to remove Sargassum in this region.</p><p><a href="https://github.com/70Gage70/SargassumFromAFAI.jl/blob/v0.3.7/data/earth-polygons.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))]),s[81]||(s[81]=e('<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span></code></pre></div>',1))])}const H=l(p,[["render",O]]);export{q as __pageData,H as default};
