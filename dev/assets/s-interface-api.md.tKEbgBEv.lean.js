import{_ as r,c as i,a4 as s,j as e,a as n,G as l,B as o,o as c}from"./chunks/framework.DKuTLT2j.js";const I=JSON.parse('{"title":"SargassumInterface.jl API","description":"","frontmatter":{},"headers":[],"relativePath":"s-interface-api.md","filePath":"s-interface-api.md","lastUpdated":null}'),d={name:"s-interface-api.md"},p={class:"jldocstring custom-block",open:""};function u(h,a,g,m,f,k){const t=o("Badge");return c(),i("div",null,[a[3]||(a[3]=s('<h1 id="SargassumInterface.jl-API" tabindex="-1">SargassumInterface.jl API <a class="header-anchor" href="#SargassumInterface.jl-API" aria-label="Permalink to &quot;SargassumInterface.jl API {#SargassumInterface.jl-API}&quot;">​</a></h1><p>These are the full docstrings for SargassumInterface.jl.</p><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><ul><li><a href="#SargassumInterface.interface-Tuple{}"><code>SargassumInterface.interface</code></a></li></ul><h2 id="From-Sargassum.jl" tabindex="-1">From Sargassum.jl <a class="header-anchor" href="#From-Sargassum.jl" aria-label="Permalink to &quot;From Sargassum.jl {#From-Sargassum.jl}&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">Missing docstring.</p><p>Missing docstring for <code>Sargassum.interface</code>. Check Documenter&#39;s build log for details.</p></div><h2 id="From-SargassumInterface.jl" tabindex="-1">From SargassumInterface.jl <a class="header-anchor" href="#From-SargassumInterface.jl" aria-label="Permalink to &quot;From SargassumInterface.jl {#From-SargassumInterface.jl}&quot;">​</a></h2>',7)),e("details",p,[e("summary",null,[a[0]||(a[0]=e("a",{id:"SargassumInterface.interface-Tuple{}",href:"#SargassumInterface.interface-Tuple{}"},[e("span",{class:"jlbinding"},"SargassumInterface.interface")],-1)),a[1]||(a[1]=n()),l(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[2]||(a[2]=s('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">interface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; reset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Start the interface.</p><p><strong>Optional Arguments</strong></p><ul><li><p><code>reset</code>: If true, the interface will be &quot;factory reset&quot; to its default state. This should only be required if the interface code itself has been modified. That is, changing parameters using sliders etc. does not require a reset.</p></li><li><p><code>args</code>: Passed directly to <code>Pluto.run()</code>.</p></li></ul><p><a href="https://github.com/70Gage70/SargassumInterface.jl/blob/v0.7.15/src/SargassumInterface.jl#L10-L19" target="_blank" rel="noreferrer">source</a></p>',5))]),a[4]||(a[4]=s('<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span></code></pre></div>',1))])}const S=r(d,[["render",u]]);export{I as __pageData,S as default};
