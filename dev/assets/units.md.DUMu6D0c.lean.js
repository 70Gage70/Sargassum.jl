import{_ as a,c as i,a4 as e,o as t}from"./chunks/framework.CsgBfYqC.js";const k=JSON.parse('{"title":"Units and Time","description":"","frontmatter":{},"headers":[],"relativePath":"units.md","filePath":"units.md","lastUpdated":null}'),n={name:"units.md"};function l(p,s,h,d,o,r){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="Units-and-Time" tabindex="-1">Units and Time <a class="header-anchor" href="#Units-and-Time" aria-label="Permalink to &quot;Units and Time {#Units-and-Time}&quot;">​</a></h1><p>Here we describe how units and time are handled across Sargassum.jl. The bulk of unit definitions and conversions are handled through the Julia package <a href="https://github.com/PainterQubits/Unitful.jl" target="_blank" rel="noreferrer"><code>Unitful</code></a>. Occasionally, more advanced use of this package will require entering units, hence we review this process briefly.</p><h2 id="A-Short-Review-of-Unitful.jl" tabindex="-1">A Short Review of Unitful.jl <a class="header-anchor" href="#A-Short-Review-of-Unitful.jl" aria-label="Permalink to &quot;A Short Review of Unitful.jl {#A-Short-Review-of-Unitful.jl}&quot;">​</a></h2><p>Define units with the syntax <code>u&quot;unit_symbol_here&quot;</code>. For example, meters, kilometer per day and degrees are defined respectively by</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;m&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;km/d&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;°&quot;</span></span></code></pre></div><p>Quantities are defined by multiplying a number by a unit,</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;m&quot;</span></span></code></pre></div><p>Units are converted using the <code>uconvert(unit_target, quantity_to_convert)</code> function, e.g.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">uconvert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;km&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># convert 2km to m</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>2000.0 m</span></span></code></pre></div><h2 id="units" tabindex="-1">Units <a class="header-anchor" href="#units" aria-label="Permalink to &quot;Units&quot;">​</a></h2><p>All units are converted internally to a consistent unit based on its function according to the global dictionary <a href="/Sargassum.jl/dev/units-api#Sargassum.UNITS"><code>UNITS</code></a>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UNITS</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Dict{String, Unitful.Unitlike} with 8 entries:</span></span>
<span class="line"><span>  &quot;distance&quot;      =&gt; km</span></span>
<span class="line"><span>  &quot;none&quot;          =&gt; </span></span>
<span class="line"><span>  &quot;degrees&quot;       =&gt; °</span></span>
<span class="line"><span>  &quot;time&quot;          =&gt; d</span></span>
<span class="line"><span>  &quot;speed&quot;         =&gt; km d^-1</span></span>
<span class="line"><span>  &quot;wave_height&quot;   =&gt; m</span></span>
<span class="line"><span>  &quot;concentration&quot; =&gt; mmol m^-3</span></span>
<span class="line"><span>  &quot;temperature&quot;   =&gt; °C</span></span></code></pre></div><p>For example, distances are measured in <code>UNITS[&quot;distance&quot;]</code>, which is <code>km</code>.</p><h2 id="coordinates" tabindex="-1">Coordinates <a class="header-anchor" href="#coordinates" aria-label="Permalink to &quot;Coordinates&quot;">​</a></h2><p><code>Sargassum.jl</code> uses both spherical (longitude/latitude) and equirectangular (x/y) coordinates as needed. The underlying physics equations must be integrated in equirectangular coordinates, but the user-facing coordinates are generally converted to spherical coordinates as much as possible.</p><p>In order to convert between spherical and equirectangular coordinates, a reference longitude <code>lon0</code> and latitude <code>lat0</code> are required. This is held by an <a href="/Sargassum.jl/dev/units-api#Sargassum.EquirectangularReference"><code>EquirectangularReference</code></a> object which can be constructed with <code>lon0</code> and <code>lat0</code> as kwargs,</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EquirectangularReference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lon0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">75</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lat0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>EquirectangularReference[lon0 = -75.0, lat0 = 10.0, R = 6371.0 km]</span></span></code></pre></div><p>Note that the <code>EquirectangularReference</code> also has a field for the radius of the Earth, in units of <code>UNITS[&quot;distance&quot;]</code>. There is a global reference <a href="/Sargassum.jl/dev/units-api#Sargassum.EQR"><code>EQR</code></a> that is used by default for all conversions. This reference is generally appropriate for the Caribbean region.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">EQR</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Base.RefValue{EquirectangularReference}(EquirectangularReference[lon0 = -75.0, lat0 = 10.0, R = 6371.0 km])</span></span></code></pre></div><p>The primary functions for conversion are <a href="/Sargassum.jl/dev/units-api#Sargassum.sph2xy-Tuple{Real, Real}"><code>sph2xy</code></a> and <a href="/Sargassum.jl/dev/units-api#Sargassum.xy2sph-Tuple{Real, Real}"><code>xy2sph</code></a>. These can be applied to a variety of objects, refer to the full documentation for details. The most basic usage is <code>sph2xy(x, y; eqr = EQR)</code> and <code>xy2sph(x, y; eqr = EQR)</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x, y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sph2xy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>2-element Vector{Float64}:</span></span>
<span class="line"><span> -547.528129275926</span></span>
<span class="line"><span>  555.9746332227937</span></span></code></pre></div><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xy2sph</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>2-element Vector{Float64}:</span></span>
<span class="line"><span> -80.0</span></span>
<span class="line"><span>  15.0</span></span></code></pre></div><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x, y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sph2xy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, eqr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> EquirectangularReference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lon0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lat0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>2-element Vector{Float64}:</span></span>
<span class="line"><span> 0.0</span></span>
<span class="line"><span> 0.0</span></span></code></pre></div><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xy2sph</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, eqr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> EquirectangularReference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lon0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lat0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>2-element Vector{Float64}:</span></span>
<span class="line"><span> -80.0</span></span>
<span class="line"><span>  15.0</span></span></code></pre></div><h2 id="times" tabindex="-1">Times <a class="header-anchor" href="#times" aria-label="Permalink to &quot;Times&quot;">​</a></h2><p>Specific times are defined using the <a href="https://docs.julialang.org/en/v1/stdlib/Dates/" target="_blank" rel="noreferrer"><code>Dates</code></a> module. For <code>Sargassum.jl</code>, in almost all cases, the only function actually required is <code>DateTime(year, month, day)</code>, e.g.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># January 1, 2000</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>2000-01-01T00:00:00</span></span></code></pre></div><p>All times are internally converted to <code>UNITS[&quot;times&quot;]</code> (equal to days) since a reference time <a href="/Sargassum.jl/dev/units-api#Sargassum.T_REF"><code>T_REF</code></a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">T_REF</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Base.RefValue{DateTime}(DateTime(&quot;2000-01-01T00:00:00&quot;))</span></span></code></pre></div><p>Note that <code>T_REF</code> is a <a href="https://docs.julialang.org/en/v1/base/c/#Core.Ref" target="_blank" rel="noreferrer">Ref</a>, i.e. its actual value is accessed using <code>T_REF.x</code> although this should generally not be required.</p><p>For conversions, the functions <a href="/Sargassum.jl/dev/units-api#Sargassum.datetime2time-Tuple{DateTime}"><code>datetime2time</code></a> and <a href="/Sargassum.jl/dev/units-api#Sargassum.time2datetime-Tuple{Real}"><code>time2datetime</code></a> are inverses.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> datetime2time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2018</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>6678.0</span></span></code></pre></div><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">time2datetime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>2018-04-14T00:00:00</span></span></code></pre></div><p>The AFAI functionality of <code>Sargassum.jl</code> generally works in terms of weeks, rather than days. For this, <a href="/Sargassum.jl/dev/units-api#Sargassum.ymw2time-Tuple{Integer, Integer, Integer}"><code>ymw2time</code></a> and <a href="/Sargassum.jl/dev/units-api#Sargassum.time2ymw-Tuple{Real}"><code>time2ymw</code></a> are inverses, acting on <code>(year, month, week)</code> tuples.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ymw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> time2ymw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>(2018, 4, 2)</span></span></code></pre></div><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ymw2time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ymw)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>6678.0</span></span></code></pre></div><p>Note that only certain times can be converted to <code>(year, month, week)</code>, in particular the day of the month must be one of <code>[7, 14, 21, 28]</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ymw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> time2ymw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DateTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2018</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># will error</span></span></code></pre></div><h2 id="Spherical-Geometry-Corrections" tabindex="-1">Spherical Geometry Corrections <a class="header-anchor" href="#Spherical-Geometry-Corrections" aria-label="Permalink to &quot;Spherical Geometry Corrections {#Spherical-Geometry-Corrections}&quot;">​</a></h2><p>There are two terms, <a href="/Sargassum.jl/dev/units-api#Sargassum.γ_sphere-Tuple{Real}"><code>γ_sphere</code></a> and <a href="/Sargassum.jl/dev/units-api#Sargassum.τ_sphere-Tuple{Real}"><code>τ_sphere</code></a> that take into account corrections required to the differential equations due to the sphericity of the Earth. These functions should not need to be accessed directly, but their effects can be turned off via the <code>geometry</code> kwarg of <a href="/Sargassum.jl/dev/simulation-api#RaftParameters"><code>RaftParameters</code></a>.</p>`,54)]))}const u=a(n,[["render",l]]);export{k as __pageData,u as default};
