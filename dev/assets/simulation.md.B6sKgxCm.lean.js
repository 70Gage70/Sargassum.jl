import{_ as p,C as o,c as d,o as c,ai as l,G as e,j as s,w as t,a}from"./chunks/framework.BImBjA36.js";const u="/Sargassum.jl/dev/assets/lndvlhe.zRX4szZq.png",k="/Sargassum.jl/dev/assets/lndvlhe.zRX4szZq.png",w=JSON.parse('{"title":"Simulation","description":"","frontmatter":{},"headers":[],"relativePath":"simulation.md","filePath":"simulation.md","lastUpdated":null}'),g={name:"simulation.md"},m={class:"jldocstring custom-block",open:""};function E(y,i,b,f,C,v){const n=o("PluginTabsTab"),h=o("PluginTabs"),r=o("Badge");return c(),d("div",null,[i[9]||(i[9]=l("",27)),e(h,null,{default:t(()=>[e(n,{label:"ics and n_clumps_max"},{default:t(()=>i[0]||(i[0]=[s("p",null,[a("We construct "),s("code",null,"ics"),a(", an "),s("a",{href:"/Sargassum.jl/dev/simulation-api#Sargassum.InitialConditions"},[s("code",null,"InitialConditions")]),a(" object. There are several constructors for different situations, but to create a rectangular arrangement, the appropriate constructor is")],-1),s("div",{class:"language-julia vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"julia"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"InitialConditions"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(t_span, x_range, y_range; to_xy)")])])])],-1),s("p",null,[a("The integration time span is controlled by "),s("code",null,"t_span"),a(", of the form "),s("code",null,"(t_initial, t_final)"),a(" and we want to integrate from April 13, 2018 to April 15, 2018. We can use Julia's built-in "),s("a",{href:"https://docs.julialang.org/en/v1/stdlib/Dates/",target:"_blank",rel:"noreferrer"},[s("code",null,"Dates")]),a(" module to easily define times as "),s("code",null,"DateTime(year, month, day)"),a(":")],-1),s("div",{class:"language-julia vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"julia"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"using"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," Dates")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"t_initial "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," DateTime"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"2018"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"4"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"13"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"t_final "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," DateTime"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"2018"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"4"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"15"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"t_span "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (t_initial, t_final)")])])])],-1),s("p",null,[a("Next, we need "),s("code",null,"x_range"),a(" and "),s("code",null,"y_range"),a(" which can be created quickly using "),s("code",null,"range(start, stop; length)"),a(". Our example consisted of a 5 x 5 grid of clumps off the coast of Brazil. We can recreate this via")],-1),s("div",{class:"language-julia vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"julia"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"x_range "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," range"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"-"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"55.0"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"-"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"50.0"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", length "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 5"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"y_range "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," range"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"5.0"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"10.0"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", length "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 5"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")])])])],-1),s("p",null,[a("Note that we have defined our ranges in terms of longitude/latitude. The optional argument "),s("code",null,"to_xy"),a(" of "),s("code",null,"InitialConditions"),a(" should therefore be set to "),s("code",null,"true"),a(" to automatically convert these spherical coordinates to equirectangular coordinates.")],-1),s("div",{class:"language-julia vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"julia"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"ics "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," InitialConditions"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(t_span, x_range, y_range, to_xy "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," true"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")])])])],-1),s("div",{class:"language- vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"}),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",null,"InitialConditions[time ∈ (2018-04-13T00:00:00, 2018-04-15T00:00:00), n_clumps = 25, lon/lat ∈ (-55.0, -50.0) × (5.0, 10.0)]")])])])],-1),s("p",null,"While we're here, we can define the maximum number of clumps we want to allow. This example contains no biological effects, so the maximum number of clumps will simply be equal to the initial number of clumps, 25.",-1),s("div",{class:"language-julia vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"julia"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"n_clumps_max "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 25")])])])],-1)])),_:1}),e(n,{label:"clumps"},{default:t(()=>i[1]||(i[1]=[s("p",null,[a("We construct "),s("code",null,"clumps"),a(", a "),s("a",{href:"/Sargassum.jl/dev/simulation-api#Sargassum.ClumpParameters"},[s("code",null,"ClumpParameters")]),a(" object. Various physics constants can be set as desired e.g. the buoyancy of the clumps. For now, we will use the defaults and therefore simply have")],-1),s("div",{class:"language-julia vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"julia"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"clumps "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," ClumpParameters"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")])])])],-1),s("div",{class:"language- vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"}),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",null,"ClumpParameters[α = 0.005427, τ = 0.01864, R = 0.7883, Ω = 6.283, σ = 0.0]")])])])],-1)])),_:1}),e(n,{label:"springs"},{default:t(()=>i[2]||(i[2]=[s("p",null,[a("We construct "),s("code",null,"springs"),a(", a "),s("a",{href:"/Sargassum.jl/dev/simulation-api#Sargassum.AbstractSpring"},[s("code",null,"AbstractSpring")]),a(" object. Built in to Sargassum.jl are two basic spring types, "),s("a",{href:"/Sargassum.jl/dev/simulation-api#Sargassum.HookeSpring"},[s("code",null,"HookeSpring")]),a(" with a traditional Hookian stiffness and "),s("a",{href:"/Sargassum.jl/dev/simulation-api#Sargassum.BOMBSpring"},[s("code",null,"BOMBSpring")]),a(" with an adaptive stiffness. We will use the "),s("code",null,"BOMBSpring"),a(" here. Its constructor is")],-1),s("div",{class:"language-julia vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"julia"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"BOMBSpring"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(A, L)")])])])],-1),s("p",null,[a("Here, "),s("code",null,"A"),a(" represents the amplitude of the stiffness, and "),s("code",null,"L"),a(" represents the natural length of the spring. We will take the amplitude to be "),s("code",null,"A = 1"),a(". A convenient way to obtain "),s("code",null,"L"),a(" is using the function "),s("a",{href:"/Sargassum.jl/dev/simulation-api#Sargassum.ΔL-Tuple{AbstractRange, AbstractRange}"},[s("code",null,"ΔL")]),a(", which takes an "),s("code",null,"InitialConditions"),a(" as its only argument and computes an appropriate natural spring length based on the average separation of clumps in their initial state. Recall that "),s("code",null,"Δ"),a(" can be entered by typing "),s("code",null,"\\Delta"),a(" and then pressing "),s("code",null,"TAB"),a(" on your keyboard. We therefore have")],-1),s("div",{class:"language-julia vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"julia"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"springs "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," BOMBSpring"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1.0"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"ΔL"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(ics))")])])])],-1),s("div",{class:"language- vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"}),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",null,"BOMBSpring[A = 1.0, L = 151.9592522325231]")])])])],-1)])),_:1}),e(n,{label:"connections"},{default:t(()=>i[3]||(i[3]=[s("p",null,[a("We construct "),s("code",null,"connections"),a(", a "),s("a",{href:"/Sargassum.jl/dev/simulation-api#Sargassum.AbstractConnections"},[s("code",null,"AbstractConnections")]),a(" object. Several connections types are available, here will will use "),s("a",{href:"/Sargassum.jl/dev/simulation-api#Sargassum.ConnectionsNearest"},[s("code",null,"ConnectionsNearest")]),a(" to connect each clump to its 2 nearest neighbors. The signature of "),s("code",null,"ConnectionsNearest"),a(" is")],-1),s("div",{class:"language-julia vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"julia"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"ConnectionsNearest"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(n_clumps_max, neighbors)")])])])],-1),s("p",null,"Hence, we have",-1),s("div",{class:"language-julia vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"julia"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"connections "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," ConnectionsNearest"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(n_clumps_max, "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"2"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")])])])],-1),s("div",{class:"language- vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"}),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",null,"ConnectionsNearest([Int64[], Int64[], Int64[], Int64[], Int64[], Int64[], Int64[], Int64[], Int64[], Int64[]  …  Int64[], Int64[], Int64[], Int64[], Int64[], Int64[], Int64[], Int64[], Int64[], Int64[]], 2)")])])])],-1)])),_:1}),e(n,{label:"gd_model"},{default:t(()=>i[4]||(i[4]=[s("p",null,[a("We construct "),s("code",null,"gd_model"),a(", an "),s("a",{href:"/Sargassum.jl/dev/simulation-api#Sargassum.AbstractGrowthDeathModel"},[s("code",null,"AbstractGrowthDeathModel")]),a(" object. Built in to Sargassum.jl are two basic biological model types, "),s("a",{href:"/Sargassum.jl/dev/simulation-api#Sargassum.ImmortalModel"},[s("code",null,"ImmortalModel")]),a(" where clumps do not grow or die by biological effects and "),s("a",{href:"/Sargassum.jl/dev/simulation-api#Sargassum.BrooksModel"},[s("code",null,"BrooksModel")]),a(" with a full model based on "),s("a",{href:"https://www.int-res.com/abstracts/meps/v599/p1-18/",target:"_blank",rel:"noreferrer"},"Brooks et. al. (2018)"),a(". We will use the "),s("code",null,"ImmortalModel"),a(" here, which has a constructor with "),s("code",null,"n_clumps_max"),a(" as its only argument. Hence, we have")],-1),s("div",{class:"language-julia vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"julia"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"gd_model "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," ImmortalModel"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")])])])],-1),s("div",{class:"language- vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"}),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",null,"ImmortalModel")])])])],-1)])),_:1}),e(n,{label:"land"},{default:t(()=>i[5]||(i[5]=[s("p",null,[a("We construct "),s("code",null,"land"),a(", an "),s("a",{href:"/Sargassum.jl/dev/simulation-api#Sargassum.AbstractLand"},[s("code",null,"AbstractLand")]),a(" object. Built in to Sargassum.jl are two basic land model types, "),s("a",{href:"/Sargassum.jl/dev/simulation-api#Sargassum.NoLand"},[s("code",null,"NoLand")]),a(" where clumps do not interact with land and "),s("a",{href:"/Sargassum.jl/dev/simulation-api#Land"},[s("code",null,"Land")]),a(" where clumps die when their position is within a polygon that defines land locations. We will use the "),s("code",null,"Land"),a(" here, which has a constructor with no arguments. Hence, we have")],-1),s("div",{class:"language-julia vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"julia"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"land "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," Land"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")])])])],-1),s("div",{class:"language- vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"}),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",null,"Land[land_itp = LAND_ITP.x]")])])])],-1)])),_:1})]),_:1}),i[10]||(i[10]=l("",13)),s("details",m,[s("summary",null,[i[6]||(i[6]=s("a",{id:"Sargassum.ConnectionsNearest-simulation",href:"#Sargassum.ConnectionsNearest-simulation"},[s("span",{class:"jlbinding"},"Sargassum.ConnectionsNearest")],-1)),i[7]||(i[7]=a()),e(r,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[8]||(i[8]=l("",7))]),i[11]||(i[11]=l("",2))])}const S=p(g,[["render",E]]);export{w as __pageData,S as default};
